# game.py
# –ó–¥–µ—Å—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –í–°–Ø –ª–æ–≥–∏–∫–∞ –∏–≥—Ä—ã: –∑–∞–≥—Ä—É–∑–∫–∞ —Å–ª–æ–≤, –≤–≤–æ–¥, –ø—Ä–æ–≤–µ—Ä–∫–∞, —Ä–∏—Å–æ–≤–∞–Ω–∏–µ –≤–∏—Å–µ–ª–∏—Ü—ã –∏ —Ç.–¥.

import random

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–π)
WORDS_FILE = "words.txt"  # –∏–º—è —Ñ–∞–π–ª–∞ —Å–æ —Å–ª–æ–≤–∞–º–∏
MAX_ATTEMPTS = 6          # —Å–∫–æ–ª—å–∫–æ —á–∞—Å—Ç–µ–π —É –≤–∏—Å–µ–ª–∏—Ü—ã

def load_words():
    """
    –ß–∏—Ç–∞–µ—Ç —Å–ª–æ–≤–∞ –∏ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞ words.txt.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π: [('—Å–ª–æ–≤–æ', '–ø–æ–¥—Å–∫–∞–∑–∫–∞'), ...]
    """
    words = []
    try:
        with open(WORDS_FILE, "r", encoding="utf-8") as file:
            for line in file:
                line = line.strip()
                if line and " - " in line:
                    word, hint = line.split(" - ", 1)
                    words.append((word.strip().lower(), hint.strip()))
    except FileNotFoundError:
        print(f"–§–∞–π–ª {WORDS_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ.")
        return [("—Ç–µ—Å—Ç", "–ø—Ä–∏–º–µ—Ä —Å–ª–æ–≤–∞")]
    return words

def get_random_word():
    """
    –í—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ –∏ –ø–æ–¥—Å–∫–∞–∑–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞.
    """
    words = load_words()
    return random.choice(words)

def display_hangman(attempts):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∏—Å—É–Ω–æ–∫ –≤–∏—Å–µ–ª–∏—Ü—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—à–∏–±–æ–∫ (attempts).
    attempts: —Å–∫–æ–ª—å–∫–æ –æ—à–∏–±–æ–∫ —É–∂–µ —Å–¥–µ–ª–∞–Ω–æ (–æ—Ç 0 –¥–æ MAX_ATTEMPTS)
    """
    stages = [
        """
           --------
           |      |
           |      
           |    
           |      
           |     
        =========
        """,
        """
           --------
           |      |
           |      O
           |    
           |      
           |     
        =========
        """,
        """
           --------
           |      |
           |      O
           |      |
           |      
           |     
        =========
        """,
        """
           --------
           |      |
           |      O
           |     /|
           |      
           |     
        =========
        """,
        """
           --------
           |      |
           |      O
           |     /|\\
           |      
           |     
        =========
        """,
        """
           --------
           |      |
           |      O
           |     /|\\
           |     /
           |     
        =========
        """,
        """
           --------
           |      |
           |      O
           |     /|\\
           |     / \\
           |     
        =========
        """
    ]
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω—É–∂–Ω—ã–π —ç—Ç–∞–ø (–Ω–æ –Ω–µ –≤—ã—Ö–æ–¥–∏–º –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã)
    return stages[min(attempts, len(stages) - 1)]

def play():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–≥—Ä—ã.
    """
    print("üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É '–í–∏—Å–µ–ª–∏—Ü–∞ –Ω–∞ –ø–æ–ª–µ —á—É–¥–µ—Å'!")
    
    # –ó–∞–≥–∞–¥—ã–≤–∞–µ–º —Å–ª–æ–≤–æ –∏ –ø–æ–¥—Å–∫–∞–∑–∫—É
    secret_word, hint = get_random_word()
    guessed_letters = []          # –±—É–∫–≤—ã, –∫–æ—Ç–æ—Ä—ã–µ –∏–≥—Ä–æ–∫ —É–∂–µ –Ω–∞–∑–≤–∞–ª
    correct_letters = []          # –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–≥–∞–¥–∞–Ω–Ω—ã–µ –±—É–∫–≤—ã
    attempts = 0                  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫

    print(f"\n–ü–æ–¥—Å–∫–∞–∑–∫–∞: {hint}")
    print("–°–ª–æ–≤–æ –∑–∞–≥–∞–¥–∞–Ω–æ. –£ –≤–∞—Å –µ—Å—Ç—å 6 –ø–æ–ø—ã—Ç–æ–∫!")

    while attempts < MAX_ATTEMPTS:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–ª–æ–≤–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: _ _ —Ç)
        display_word = ""
        for letter in secret_word:
            if letter in correct_letters:
                display_word += letter + " "
            else:
                display_word += "_ "
        print("\n–°–ª–æ–≤–æ:", display_word.strip())

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∏—Å–µ–ª–∏—Ü—É
        print(display_hangman(attempts))

        # –ï—Å–ª–∏ —Å–ª–æ–≤–æ —É–≥–∞–¥–∞–Ω–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é
        if all(letter in correct_letters for letter in secret_word):
            print("\nüéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ:", secret_word)
            return

        # –í–≤–æ–¥ –±—É–∫–≤—ã
        guess = input("–í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É: ").strip().lower()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –≤–≤–æ–¥–∞
        if len(guess) != 1 or not guess.isalpha():
            print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ–¥–Ω—É –±—É–∫–≤—É!")
            continue

        if guess in guessed_letters:
            print("–í—ã —É–∂–µ –ø—Ä–æ–±–æ–≤–∞–ª–∏ —ç—Ç—É –±—É–∫–≤—É!")
            continue

        # –î–æ–±–∞–≤–ª—è–µ–º –±—É–∫–≤—É –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–ø—ã—Ç–æ–∫
        guessed_letters.append(guess)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –±—É–∫–≤–∞ –≤ —Å–ª–æ–≤–µ
        if guess in secret_word:
            correct_letters.append(guess)
            print("‚úÖ –í–µ—Ä–Ω–æ!")
        else:
            attempts += 1
            print("‚ùå –ù–µ–≤–µ—Ä–Ω–æ!")

    # –ï—Å–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–æ–ø—ã—Ç–∫–∏
    print(display_hangman(attempts))
    print("\nüíÄ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –±—ã–ª–æ:", secret_word)